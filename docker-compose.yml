# supporting backends for node-appoptics testing
#
# requires copying ../oboe-test/collectors/<collector-name>/<name>.crt
# to test/certs/<collector-name>.crt
#
version: '2.1'
services:
  web-leak:
    ports:
      - "8013:8088"
    environment:
      - TODO_SERVER_OPTIONS=${TODO_SERVER_OPTIONS}
    build:
      context: .
      args:
        - TODO_SERVICE_KEY=${AO_TOKEN_STG}:web-leak
        - APPOPTICS_DEBUG_LEVEL=${APPOPTICS_DEBUG_LEVEL:-2}
        # staging collector - depends on $AO_TOKEN_STG being valid
        - APPOPTICS_COLLECTOR=${TODO_COLLECTOR:-collector-stg.appoptics.com}
        - APPOPTICS_REPORTER=ssl
        - APPOPTICS_TRUSTEDPATH=${TODO_TRUSTEDPATH}

        # set the backend (mongodb) address to use
        - TODO_MONGODB_ADDRESS=mongo_2_4:27017
        #
        # Rebuild starting with fetching the todo application
        #
        - TODO_REFETCH
        # and reinstall the application
        - TODO_REINSTALL
        - TODO_TARBALL=https://api.github.com/repos/bmacnaughton/todomvc-mongodb/tarball

  web-aaa:
    ports:
      - "8088:8088"
    environment:
      - TODO_SERVER_OPTIONS=${TODO_SERVER_OPTIONS}
    build:
      context: .
      args:
        - TODO_SERVICE_KEY=${AO_TOKEN_STG}:web-aaa
        # expect librato/node-appoptics-bindings#new-liboboe while private
        #- AO_TEST_PACKAGE=${AO_TEST_PACKAGE}
        # expect a git auth token (or extend Dockerfile with user and password)
        #- AO_TEST_GITAUTH=${AO_TEST_GITAUTH}
        # - AO_TEST_GITUSER
        # - AO_TEST_GITPASS
        - APPOPTICS_DEBUG_LEVEL=${APPOPTICS_DEBUG_LEVEL:-2}

        # scribe collector
        # - AO_TEST_COLLECTOR=${AO_COLLECTOR:-scribe-collector:4444}
        # - AO_TEST_COLLECTOR_CERT=${AO_COLLECTOR_CERT:-test/certs/scribe-collector.crt}

        # java collector
        # - APPOPTICS_COLLECTOR=${AO_COLLECTOR:-java-collector:12222}
        # - APPOPTICS_TRUSTEDPATH={AO_COLLECTOR_CERT:-test/certs/java-collector.crt}

        # staging collector - depends on $AO_TOKEN_STG being valid
        - APPOPTICS_COLLECTOR=${TODO_COLLECTOR:-collector-stg.appoptics.com}
        - APPOPTICS_REPORTER=ssl
        - APPOPTICS_TRUSTEDPATH=${TODO_TRUSTEDPATH}

        # set the backend (mongodb) address to use
        - TODO_MONGODB_ADDRESS=mongo_2_4:27017
        #
        # Rebuild starting with fetching the todo application
        #
        - TODO_REFETCH
        # and reinstall the application
        - TODO_REINSTALL
    image: todo-web-aaa
    volumes:
      # map the certs
      - ./test/certs:/todo/certs/:ro
    logging:
      options:
        max-file: "1"
        max-size: 50m

  web-bbb:
    expose:
      - "8088"
    environment:
      - TODO_SERVER_OPTIONS=${TODO_SERVER_OPTIONS}
    build:
      context: .
      args:
        - TODO_SERVICE_KEY=${AO_TOKEN_STG}:web-bbb

        - APPOPTICS_DEBUG_LEVEL=${APPOPTICS_DEBUG_LEVEL:-2}
        - APPOPTICS_COLLECTOR=${TODO_COLLECTOR:-collector-stg.appoptics.com}
        - APPOPTICS_REPORTER=ssl
        - APPOPTICS_TRUSTEDPATH=${TODO_TRUSTEDPATH}

        # set the backend (mongodb) address to use
        - TODO_MONGODB_ADDRESS=mongo_2_4:27017
        - TODO_REFETCH
        - TODO_REINSTALL
    image: todo-web-bbb
    volumes:
      # map the certs
      - ./test/certs:/todo/certs/:ro
    logging:
      options:
        max-file: "1"
        max-size: 50m

  web-ccc:
    expose:
      - "8088"
    environment:
      - TODO_SERVER_OPTIONS=${TODO_SERVER_OPTIONS}
    build:
      context: .
      args:
        - TODO_SERVICE_KEY=${AO_TOKEN_STG}:web-ccc

        - APPOPTICS_DEBUG_LEVEL=${APPOPTICS_DEBUG_LEVEL:-2}
        - APPOPTICS_COLLECTOR=${TODO_COLLECTOR:-collector-stg.appoptics.com}
        - APPOPTICS_REPORTER=ssl
        - APPOPTICS_TRUSTEDPATH=${TODO_TRUSTEDPATH}

        # set the backend (mongodb) address to use
        - TODO_MONGODB_ADDRESS=mongo_2_4:27017

        - TODO_REFETCH
        - TODO_REINSTALL
    image: todo-web-ccc
    volumes:
      # map the certs
      - ./test/certs:/todo/certs/:ro
    logging:
      options:
        max-file: "1"
        max-size: 50m

  # extend the collector services into this composition.
  # NOTE: extend goes away in version 3.0 of docker-compose.yml
  #
  scribe-collector:
    extends:
      file: "../oboe-test/collectors/docker-compose.yml"
      service: "scribe-collector"
  java-collector:
    extends:
      file: "../oboe-test/collectors/docker-compose.yml"
      service: "java-collector"

  logalyzer:
    build:
      context: test/docker
      dockerfile: logalyzer.yml
    image: logalyzer
    logging:
      options:
        max-file: "1"
        max-size: 50m


  mongo_2_4:
    image: "mongo_2_4"
    build:
      context: test/docker/
      dockerfile: mongo_2_4.yml
    logging:
      options:
        max-file: "1"
        max-size: 50m
    ports:
      # host:container (avoid conflict with ao test host port)
      - "27027:27017"
