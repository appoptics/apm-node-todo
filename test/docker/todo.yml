FROM ubuntu:16.04

MAINTAINER Iliyan Trifonov <iliyan.trifonov@gmail.com>

# use mirrors for faster apt downloads no matter where the machine that
# builds the image is
#RUN echo "deb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted #universe multiverse" > /etc/apt/sources.list; \
	#echo "deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-updates main restricted universe multiverse" >> /etc/apt/sources.list; \
	#echo "deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list; \
	#echo "deb mirror://mirrors.ubuntu.com/mirrors.txt trusty-security main restricted universe multiverse" >> /etc/apt/sources.list

# install required software before using nvm/node/npm/bower
RUN apt-get update && apt-get install -y curl git python build-essential

# add user node and use it to install node/npm and run the app
RUN useradd --home /home/node -m -U -s /bin/bash node

# allow some limited sudo commands for user `node`
RUN echo 'Defaults !requiretty' >> /etc/sudoers; \
    echo 'node ALL= NOPASSWD: /usr/sbin/dpkg-reconfigure -f noninteractive tzdata, /usr/bin/tee /etc/timezone, /bin/chown -R node\:node /myapp' >> /etc/sudoers;

# run all of the following commands as user node from now on
USER node

# get the application, extract it, move it, and name the dir todo
RUN cd $HOME && curl -LkSs https://api.github.com/repos/bmacnaughton/todomvc-mongodb/tarball -o todo.tar.gz \
    && mkdir -p tmp && tar -zvxf todo.tar.gz -C tmp \
    && mv tmp/$(ls -t tmp/ | head -1) $HOME/todo

# get nvm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash

# change it to your required node version
ARG TODO_NODE_VERSION
ENV NODE_VERSION ${TODO_NODE_VERSION:-4.8.5}

# needed by nvm install
ENV NVM_DIR /home/node/.nvm

# install the specified node version and set it as the default
RUN . ~/.nvm/nvm.sh && nvm install $NODE_VERSION && nvm alias default $NODE_VERSION

# install the packagecloud proxy.
RUN . ~/.nvm/nvm.sh && curl -s https://bb2874f186eb519f73ff3f8c64a777be6522ac88490ed0ca:@packagecloud.io/install/repositories/AppOptics/apm-node/script.node.sh | bash

#
# most of the heavy lifting part of building the image is done now, so set the
# environment up now. that allows docker to use the cached images prior to this
# point when changing only the environment variables.
#
ARG TODO_SERVICE_KEY
ARG TODO_MONGODB_ADDRESS
ARG APPOPTICS_COLLECTOR
ARG APPOPTICS_REPORTER

# not sure I want pm2
# && npm install -g bower pm2 --user "node"

# on container's boot the run script will update/install all
# required npm/bower packages for the app and run the app
#ADD ./run_all.sh /run_all.sh

#exposes port 3000 but your app may use any port specified in it
EXPOSE 3000

# /run_all.sh does everything required on container's boot
#CMD ["/bin/bash", "/run_all.sh"]

ENV APPOPTICS_SERVICE_KEY $TODO_SERVICE_KEY

ENV TODO_MONGODB_ADDRESS=${TODO_MONGODB_ADDRESS:-mongo_2_4:27017}
ENV APPOPTICS_COLLECTOR=$APPOPTICS_COLLECTOR
ENV APPOPTICS_REPORTER=$APPOPTICS_REPORTER
# these provide a different location for appoptics-bindings.
ENV AO_TEST_GITAUTH=$AO_TEST_GITAUTH
ENV AO_TEST_PACKAGE=$AO_TEST_PACKAGE

RUN . ~/.nvm/nvm.sh && cd $HOME/todo && npm install .
CMD ["/bin/bash", "-c", "cd $HOME/todo && source ~/.nvm/nvm.sh && node server --be_ip $TODO_MONGO_ADDRESS -r 100"]

# execute an interval timer once every 10 seconds to keep the foreground
# process alive.
#CMD ["/bin/bash", "-c", "source ~/.nvm/nvm.sh && node -e 'setInterval(function() {}, 10000)'"]
